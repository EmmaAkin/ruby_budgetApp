

<table class="table table-striped">

 <tbody>


  <tr><form action="/update/new/incomes" method="POST">
            <input name="_method" type="hidden" value="put" />

            <td name="title">

                    <div class="form-group input-group col-xs-6 bp-no-padding"  >
                        <input type="text" class="form-control input-sm amount income-amount ng-pristine ng-valid" name="amount"/>
                    </div>
           </td>


            <td  name="title">
                <div class="form-group input-group col-xs-4 bp-no-padding"  >
                    <span class="input-group-addon dollar-add-on">$</span>
                    <input type="text" class="form-control input-sm amount income-amount ng-pristine ng-valid"/>
                </div>
            </td>

            <td><div class="form-group input-group col-xs-4 bp-no-padding"  >
                    <select  class="form-control">
                            <option name="period" value ="Monthly" >Monthly</option>
                            <option name="period" value="Quarterlyly">Quarterly</option>
                            <option name="period" value="Yearly">Yearly</option>
                    </select>
                    </div>
            </td>

            <td>
                            <button type="submit" class="btn btn-primary" name="ok">ADD INCOME</button>
                            <br> </td>
                    </form>
          </tr>

</tbody>
</table>

<table class="table table-striped">
   <thead>
   <tr>
   <th>INCOME</th><th>AMOUNT</th><th>DURATION</th><th>action</th>
 </tr>
 </thead>
  <tbody> <% @incomes.each do |incomes| %>
  <tr>
            <td name="title"><%= incomes.title %></td>
            <td> <form action="/update/incomes/<%= incomes.id %>" method="POST">
                <div class="form-group input-group col-xs-6 bp-no-padding"  >
                    <span class="input-group-addon dollar-add-on">$</span>
                    <input type="text" class="form-control input-sm amount income-amount ng-pristine ng-valid" name="amount" value="<%= incomes.amount %>" />
                </div>
                    </form>
            </td>
            <td>
                    <select  class="form-control">
                            <option name="period" value ="<%= incomes.period %>" ><%= incomes.period %></option>
                            <option name="period" value="Quarterly">Monthly</option>
                            <option name="period" value="Quarterly">Quarterly</option>
                            <option name="period" value="Yearly">Yearly</option>
                    </select>
            </td>

            <td>
                    <form action="/update/incomes/<%= incomes.id %>" method="POST">
                            <input name="_method" type="hidden" value="put" />
                            <button type="submit" class="btn btn-primary" name="commit"  value="update">UPDATE</button>
                            <button type="submit" class="btn glyphicon glyphicon-trash " name="commit" value="del"></button>

                            <br>
                    </form>
            </td>
           </tr>
           <tr>
           <div class="form-group input-group col-xs-6 bp-no-padding"  >
                    <span class="input-group-addon dollar-add-on">$</span>
                    <input type="text" class="form-control input-sm amount income-amount ng-pristine ng-valid" name="amount" value="<%= @sum_of_income %>" />
                </div>

                            </tr>

</tbody> <% end %>


   </tbody>
</table>




<table class="table table-striped">
   <thead>
   <tr>
   <th>Expenses</th>
   <th>AMOUNT</th>
   <th>DURATION</th>
   <th>action</th>
 </tr>
 </thead>

 <tbody>

<% @expenses.each do |expenses| %>
  <tr>
            <td name="title"><%= expenses.title %></td>
            <td> <form action="/update/<%= expenses.id %>" method="POST">
                <div class="form-group input-group col-xs-6 bp-no-padding"  >
                    <span class="input-group-addon dollar-add-on">$</span>
                    <input type="text" class="form-control input-sm amount income-amount ng-pristine ng-valid" name="amount" value="<%= expenses.amount %>" />
                </div>
                    </form>
            </td>
            <td>
                    <select  class="form-control">
                            <option name="period" value ="<%= expenses.period %>" ><%= expenses.period %></option>
                            <option name="period" value="Quarterlyly">Quarterly</option>
                            <option name="period" value="Yearly">Yearly</option>
                    </select>
            </td>

            <td>
                    <form action="/update/<%= expenses.id %>" method="POST">
                            <input name="_method" type="hidden" value="put" />
                            <button type="submit" class="btn btn-primary" name="ok">UPDATE</button>
                            <button type="submit" class="btn " name="del">DELETE</button>

                            <br>
                    </form>
            </td>


                            </tr>

</tbody> <% end %>


   </tbody>
</table>


<script>
$(document).ready(function() {
    // Generate a simple captcha
    function randomNumber(min, max) {
        return Math.floor(Math.random() * (max - min + 1) + min);
    }
    $('#captchaOperation').html([randomNumber(1, 100), '+', randomNumber(1, 200), '='].join(' '));

    $('#basicBootstrapForm').formValidation({
        framework: 'bootstrap',
        icon: {
            valid: 'glyphicon glyphicon-ok',
            invalid: 'glyphicon glyphicon-remove',
            validating: 'glyphicon glyphicon-refresh'
        },
        fields: {
            firstName: {
                row: '.col-xs-4',
                validators: {
                    notEmpty: {
                        message: 'The first name is required'
                    }
                }
            },
            lastName: {
                row: '.col-xs-4',
                validators: {
                    notEmpty: {
                        message: 'The last name is required'
                    }
                }
            },
            username: {
                validators: {
                    notEmpty: {
                        message: 'The username is required'
                    },
                    stringLength: {
                        min: 6,
                        max: 30,
                        message: 'The username must be more than 6 and less than 30 characters long'
                    },
                    regexp: {
                        regexp: /^[a-zA-Z0-9_\.]+$/,
                        message: 'The username can only consist of alphabetical, number, dot and underscore'
                    }
                }
            },
            email: {
                validators: {
                    notEmpty: {
                        message: 'The email address is required'
                    },
                    emailAddress: {
                        message: 'The input is not a valid email address'
                    }
                }
            },
            password: {
                validators: {
                    notEmpty: {
                        message: 'The password is required'
                    },
                    different: {
                        field: 'username',
                        message: 'The password cannot be the same as username'
                    }
                }
            },
            gender: {
                validators: {
                    notEmpty: {
                        message: 'The gender is required'
                    }
                }
            },
            captcha: {
                validators: {
                    callback: {
                        message: 'Wrong answer',
                        callback: function(value, validator, $field) {
                            var items = $('#captchaOperation').html().split(' '), sum = parseInt(items[0]) + parseInt(items[2]);
                            return value == sum;
                        }
                    }
                }
            },
            agree: {
                validators: {
                    notEmpty: {
                        message: 'You must agree with the terms and conditions'
                    }
                }
            }
        }
    });
});
</script>